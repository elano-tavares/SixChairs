# main.py

from pathlib import Path
import sys

# Importa fun√ß√µes do extrator que s√£o usadas para a extra√ß√£o inicial dos TSVs
from src.extrator import (
    carregar_nome_diretores,
    carregar_diretores_por_titulo,
    extrair_filmes
)

# Importa fun√ß√µes do binary_store para salvar o bin√°rio inicial
from src.binary_store import salvar_filmes_binario, ler_filmes_binario # ler_filmes_binario pode ser √∫til aqui

# Importa o novo IndexBuilder, que gerencia todos os √≠ndices
from src.index_builder import IndexBuilder

# Importa a nova interface de linha de comando
from src.cli import menu_principal

def main():
    DATA_DIR = Path("data")
    BIN_FILE = DATA_DIR / "filmes.bin"
    
    # Instancia o IndexBuilder, passando o caminho do arquivo bin√°rio principal
    index_builder = IndexBuilder(str(BIN_FILE))

    # Tenta carregar os √≠ndices existentes e o arquivo bin√°rio
    # Se o BIN_FILE n√£o existe OU os √≠ndices n√£o puderam ser carregados, reconstruir
    if not BIN_FILE.exists() or not index_builder.carregar_todos_indices():
        print("üì§ Arquivo bin√°rio ou um ou mais √≠ndices n√£o encontrados/v√°lidos. Preparando extra√ß√£o dos arquivos TSV...")

        # Verifica se os arquivos .tsv necess√°rios existem na pasta data/
        NAMES_FILE = DATA_DIR / "name.basics.tsv"
        CREW_FILE = DATA_DIR / "title.crew.tsv"
        BASICS_FILE = DATA_DIR / "title.basics.tsv"

        REQUIRED_FILES = [NAMES_FILE, CREW_FILE, BASICS_FILE]

        print("üìÅ Verificando arquivos na pasta /data...")
        arquivos_ok = True
        for file in REQUIRED_FILES:
            if not file.exists():
                print(f"‚ùå Arquivo ausente: {file}")
                arquivos_ok = False

        if not arquivos_ok:
            print("‚ö†Ô∏è  Certifique-se de que todos os arquivos .tsv estejam dispon√≠veis na pasta 'data/'")
            sys.exit(1) # Sai do programa se os arquivos TSV n√£o estiverem presentes

        print("‚úÖ Todos os arquivos foram encontrados. Extraindo e salvando filmes...")

        # Carrega os dados brutos e extrai os objetos Filme
        nomes_diretores = carregar_nome_diretores(str(NAMES_FILE))
        diretores_por_titulo = carregar_diretores_por_titulo(str(CREW_FILE))
        filmes_extraidos = extrair_filmes(str(BASICS_FILE), diretores_por_titulo, nomes_diretores, limite=1000)

        # Salva a lista de filmes extra√≠dos no arquivo bin√°rio
        salvar_filmes_binario(filmes_extraidos, str(BIN_FILE))
        print(f"‚úÖ {len(filmes_extraidos)} filmes salvos inicialmente em: {BIN_FILE}")

        # Constr√≥i todos os √≠ndices a partir dos filmes rec√©m-salvos
        index_builder.construir_todos_indices(filmes_extraidos)
        
        # Salva os √≠ndices rec√©m-constru√≠dos para persist√™ncia
        index_builder.salvar_todos_indices()
        print("üíæ Filmes e todos os √≠ndices (TRIE, Hash, B-Tree) salvos com sucesso.")

    else:
        print("‚úÖ Dados e √≠ndices carregados com sucesso de arquivos existentes.")

    # Inicia a interface de linha de comando, passando o index_builder
    menu_principal(index_builder, str(BIN_FILE))

if __name__ == "__main__":
    main()
